plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.0'
    id "info.solidsoft.pitest" version "1.1.11"
}


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

task stage(dependsOn: ['shadowJar', 'clean'])
task optimize(dependsOn: ['build'], type: Exec) {
    commandLine "bash", "-c", "java -cp build/libs/xoliba-all.jar OptimizationMain"
}

repositories {
    jcenter()
}

assemble.dependsOn shadowJar
distZip.enabled = false
distTar.enabled = false
jar.enabled = false
shadowDistZip.enabled = false
shadowDistTar.enabled = false

dependencies {
    compile 'com.google.guava:guava:21.0'
    compile 'com.sparkjava:spark-core:2.6.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.+"
}

jar {
    manifest {
        attributes 'Main-Class': 'App'
    }
}

pitest {
    targetClasses = ['AI.*', 'Game.*', 'Optimization.MatchMaker'];
    targetTests = ['AI.*', 'Game.*', 'Optimization.*']
}
mainClassName = 'App'

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
